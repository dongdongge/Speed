apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "soyouarehere.imwork.speed"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        config {
            //签名文件在项目根目录下
            //KEY_ALIAS，KEY_PASSWORD，STORE_PASSWORD写在项目根目录下的gradle.properties里
            keyAlias "speed.keystore"
            keyPassword "speed2018"
            storeFile file('../keystore/speed.keystore')
            storePassword "speed2018"
        }
    }
    buildTypes {
        release {
            //是否混淆
            minifyEnabled false
            //是否移除无用资源
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config//使用上面配置的签名进行打包
        }
        debug {
            //是否混淆
            minifyEnabled false
            signingConfig signingConfigs.config//ddebug模式下也使用上面配置的签名进行打包
        }
    }
    //开启Java1.8 能够使用lambda表达式
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {

    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->  // each 改为 all
            def date = new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
            if (variant.buildType.name.equals('debug')) {
                outputFileName = "speed_${date}_v${defaultConfig.versionName}_debug.apk"
            }
            if (variant.buildType.name.equals('release')) {
                outputFileName = "speed_${date}_v${defaultConfig.versionName}_release.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //Android
    implementation rootProject.ext.dependencies.appcompatV7
    implementation rootProject.ext.dependencies.supportV4
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.cardview
    implementation rootProject.ext.dependencies.rxrelay
    // 网络请求
    implementation rootProject.ext.dependencies.okhttp3
    implementation rootProject.ext.dependencies.retrofit
    implementation rootProject.ext.dependencies.converter
    implementation rootProject.ext.dependencies.adapter
    // 图片加载
    implementation rootProject.ext.dependencies.fresco
    // RxJava
    implementation rootProject.ext.dependencies.rxAndroid
    implementation rootProject.ext.dependencies.rxJava
    // json解析
    implementation rootProject.ext.dependencies.gson
    // log打印工具
    implementation rootProject.ext.dependencies.logging
    //butter-knife
    implementation rootProject.ext.dependencies.butterknife
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor rootProject.ext.dependencies.butterknifeCompiler
    //LeakCanary
    debugImplementation rootProject.ext.dependencies.leakcanaryAndroid
    releaseImplementation rootProject.ext.dependencies.leakcanaryAndroidNoOp
    //EventBus
    implementation rootProject.ext.dependencies.eventbus
    //fastJson
    implementation rootProject.ext.dependencies.fastjson
    implementation rootProject.ext.dependencies.zxing
//    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
    implementation rootProject.ext.dependencies.lottie
}

def releaseTime() {
//    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
    return new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
}
